{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/is-style-supported.js"],"names":["f","exports","module","define","amd","window","global","self","this","isStlyeSupported","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","prop","value","arguments","support","checkNativeSupport","camel","replace","camelRe","all","char","toUpperCase","capitalized","charAt","slice","canSetProperty","prefixes","prefixed","toLowerCase","el","document","createElement","CSS","supports","style","cssText"],"mappings":";CAAA,SAAAA,GAAA,GAAA,iBAAAC,SAAA,oBAAAC,OAAAA,OAAAD,QAAAD,SAAA,GAAA,mBAAAG,QAAAA,OAAAC,IAAAD,OAAA,GAAAH,OAAA,EAAA,oBAAAK,OAAAA,OAAA,oBAAAC,OAAAA,OAAA,oBAAAC,KAAAA,KAAAC,MAAAC,iBAAAT,KAAA,CAAA,WAAA,OAAA,SAAAU,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAf,GAAA,IAAAY,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAC,EAAA,mBAAAC,SAAAA,QAAA,IAAAjB,GAAAgB,EAAA,OAAAA,EAAAD,GAAA,GAAA,GAAAG,EAAA,OAAAA,EAAAH,GAAA,GAAA,IAAAI,EAAA,IAAAC,MAAA,uBAAAL,EAAA,KAAA,MAAAI,EAAAE,KAAA,mBAAAF,EAAA,IAAAG,EAAAV,EAAAG,GAAA,CAAAd,QAAA,IAAAU,EAAAI,GAAA,GAAAQ,KAAAD,EAAArB,QAAA,SAAAS,GAAA,OAAAI,EAAAH,EAAAI,GAAA,GAAAL,IAAAA,IAAAY,EAAAA,EAAArB,QAAAS,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAd,QAAA,IAAA,IAAAiB,EAAA,mBAAAD,SAAAA,QAAAF,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,EAAA,CAAA,CAAAW,EAAA,CAAA,SAAAR,EAAAf,EAAAD,2EC4De,SAA0ByB,EAAMC,GAC3CA,EAA6B,IAArBC,UAAUJ,OAAeG,EAAQ,UACzC,IAAIE,EAAUC,EAAmBJ,EAAMC,GACvC,GAAIE,EACA,OAAO,EAEX,IAAIE,GArDaL,EAqDOA,EApDjBA,EAAKM,QAAQC,EAAS,SAACC,EAAKC,GAAN,OAAgBA,EAAO,IAAIC,iBAqDlDC,EAAcN,EAAMO,OAAO,GAAGF,cAAgBL,EAAMQ,MAAM,GAtDpE,IAAqBb,EAuDjBG,EAAUW,EAAed,EAAMK,EAAOJ,GACtC,IAAIH,EAASiB,EAASjB,OACtB,MAAQK,GAAWL,KAAU,CACzB,IAAMkB,EAAW,IAAMD,EAASjB,GAAQmB,cAAgB,IAAMjB,GAC9DG,EAAUC,EAAmBY,EAAUf,MAEnCI,EAAQU,EAASjB,GAAUa,EAC3BR,EAAUW,EAAeE,EAAUX,EAAOJ,IAGlD,OAAOE,GA3EX,IAAMe,EAAKC,SAASC,cAAc,OAC5BL,EAAW,CAAC,SAAU,MAAO,IAAK,MAClCR,EAAU,mBAoBhB,SAASH,EAAmBJ,EAAMC,GAC9B,SAAIoB,MAAOA,IAAIC,WACJD,IAAIC,SAAStB,EAAMC,GAgBlC,SAASa,EAAed,EAAMK,EAAOJ,GACjC,IAAME,EAAUE,KAASa,EAAGK,MAC5B,MAAc,YAAVtB,EACOE,GAEXe,EAAGK,MAAMC,QAAUxB,EAAO,IAAMC,EACzBE,GAA+B,KAApBe,EAAGK,MAAMlB,qCDjD/B","file":"is-style-supported.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/*\n * Common varilables\n */\nconst el = document.createElement('div');\nconst prefixes = ['Webkit', 'Moz', 'O', 'ms'];\nconst camelRe = /-([a-z]|[0-9])/ig;\n\n/*\n * Convert kebab-case to camel-case\n *\n * @param {String} prop\n * @return {String}\n */\nfunction toCamelCase(prop) {\n    return prop.replace(camelRe, (all, char) => (char + '').toUpperCase());\n}\n\n/*\n * Check the native `CSS.supports`\n * method if it exists\n *\n * @param {String} prop\n * @param {String} value (optional)\n * @return {Boolean}\n */\nfunction checkNativeSupport(prop, value) {\n    if (CSS && CSS.supports) {\n        return CSS.supports(prop, value);\n    }\n    return false;\n}\n\n/*\n * Determine support by applying the\n * property/value to the test element\n * and checking if the property exists\n * in the style object\n *\n * @param {String} prop\n * @param {String} camel\n * @param {String} value\n * @return {Boolean}\n */\nfunction canSetProperty(prop, camel, value) {\n    const support = camel in el.style;\n    if (value === 'inherit') {\n        return support;\n    }\n    el.style.cssText = prop + ':' + value;\n    return support && el.style[camel] !== '';\n}\n\n/*\n * Detect support for CSS properties and\n * their assignable values\n *\n * @param {String} prop\n * @param {String} value (optional)\n * @return {Boolean}\n */\nexport default function isStyleSupported(prop, value) {\n    value = arguments.length === 2 ? value : 'inherit';\n    let support = checkNativeSupport(prop, value);\n    if (support) {\n        return true;\n    }\n    let camel = toCamelCase(prop);\n    const capitalized = camel.charAt(0).toUpperCase() + camel.slice(1);\n    support = canSetProperty(prop, camel, value);\n    let length = prefixes.length;\n    while (!support && length--) {\n        const prefixed = '-' + prefixes[length].toLowerCase() + '-' + prop;\n        support = checkNativeSupport(prefixed, value);\n        if (!support) {\n            camel = prefixes[length] + capitalized;\n            support = canSetProperty(prefixed, camel, value);\n        }\n    }\n    return support;\n}\n"]}